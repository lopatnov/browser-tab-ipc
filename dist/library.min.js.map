{"version":3,"file":"library.min.js","sources":["../src/const.ts","../src/transport-type.enum.ts","../node_modules/events/events.js","../src/session-storage-transport.ts","../src/shared-worker-transport.ts","../src/transport-fabric.ts","../src/browser-tab-ipc.ts"],"sourcesContent":["export const EventConnected = 'connected';\nexport const EventConnectionError = 'connectionError';\nexport const EventDisconnected = 'disconnected';\nexport const EventMessage = 'message';\nexport const DefaultStorageKeyPrefix = 'ipc';\nexport const DefaultStorageExpiredTime = 30000;\n","export enum TransportType {\n  sessionStorage = 10,\n  sharedWorker = 20,\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","import EventEmitter from 'events';\n\nimport {AbstractTransport} from './abstract-transport';\nimport {ClientMessage} from './client-message';\nimport {ConnectionOptions} from './connection-options';\nimport {ConnectionState} from './connection-state';\nimport {DefaultStorageExpiredTime, DefaultStorageKeyPrefix, EventConnected, EventConnectionError, EventDisconnected, EventMessage} from './const';\nimport {Action1} from './functors';\nimport {TransportType} from './transport-type.enum';\n\nexport class SessionStorageTransport extends EventEmitter implements AbstractTransport {\n  static isSupported() {\n    return !!localStorage;\n  }\n\n  private isConnected: boolean = false;\n  private keyPrefix: string = DefaultStorageKeyPrefix;\n  private messageTime: Date = new Date(0, 0, 0, 0, 0, 0, 0);\n  private messageExpiredTime: number = DefaultStorageExpiredTime;\n  private clearOldMessagesTimeout: NodeJS.Timeout | undefined;\n  private lastClearTime: Date = new Date(0, 0, 0, 0, 0, 0, 0);\n  private maxStorageCleanTime = DefaultStorageExpiredTime * 3;\n  private beforeunloadHandler = () => this.disconnect();\n  private storageHandler = (e: StorageEvent) => {\n    if (e.key?.startsWith(this.keyPrefix)) {\n      this.onStorageChange();\n    }\n  };\n\n  get transportType() {\n    return TransportType.sessionStorage;\n  }\n\n  private onConnected(state: ConnectionState) {\n    this.emit(EventConnected, state);\n  }\n  private onConnectionError(state: ConnectionState) {\n    this.emit(EventConnectionError, state);\n  }\n  private onDisconnected(state: ConnectionState) {\n    this.emit(EventDisconnected, state);\n  }\n  private onMessage(state: any) {\n    this.emit(EventMessage, state);\n  }\n\n  public connected(callback: Action1<ConnectionState>) {\n    this.on(EventConnected, callback);\n  }\n  public connectionError(callback: Action1<ConnectionState>) {\n    this.on(EventConnectionError, callback);\n  }\n  public disconnected(callback: Action1<ConnectionState>) {\n    this.on(EventDisconnected, callback);\n  }\n  public message(callback: Action1<any>) {\n    this.on(EventMessage, callback);\n  }\n\n  public async connect(options?: ConnectionOptions | undefined): Promise<ConnectionState> {\n    let state: ConnectionState;\n    try {\n      this.throwIfNotSupported();\n      this.keyPrefix = options?.storageKey || DefaultStorageKeyPrefix;\n      this.messageExpiredTime = options?.storageExpiredTime || DefaultStorageExpiredTime;\n      this.maxStorageCleanTime = this.messageExpiredTime * 3;\n      this.subscribeStorage();\n      window.addEventListener('beforeunload', this.beforeunloadHandler);\n      this.messageTime = new Date();\n      this.isConnected = true;\n      state = this.getConnectionState();\n      this.onConnected(state);\n    } catch (ex) {\n      state = this.getConnectionState();\n      state.error = ex;\n      this.onConnectionError(state);\n      throw state;\n    }\n    return state;\n  }\n\n  private throwIfNotSupported() {\n    if (!SessionStorageTransport.isSupported()) {\n      const state = this.getConnectionState();\n      state.error = new Error('Session Storage is not supported');\n      throw state;\n    }\n  }\n\n  private getConnectionState(): ConnectionState {\n    return {\n      type: this.transportType,\n      connected: SessionStorageTransport.isSupported() && this.isConnected,\n    };\n  }\n\n  private subscribeStorage() {\n    addEventListener('storage', this.storageHandler);\n  }\n\n  public async disconnect(): Promise<ConnectionState> {\n    this.clearOldMessages();\n    removeEventListener('beforeunload', this.beforeunloadHandler);\n    removeEventListener('storage', this.storageHandler);\n    this.isConnected = false;\n    const state = this.getConnectionState();\n    this.onDisconnected(state);\n    return state;\n  }\n\n  public async postMessage(message: any): Promise<void> {\n    if (!this.connected) return;\n    const date = new Date();\n    this.setMessageItem(message, date);\n    await this.runClearOldMessages();\n  }\n\n  private setMessageItem(message: string, date: Date) {\n    const key = `${this.keyPrefix}_msg_${date.getTime()}`;\n    const msgObject: ClientMessage = {\n      date,\n      message,\n    };\n    const value = JSON.stringify(msgObject);\n    this.messageTime = date;\n    localStorage.setItem(key, value);\n  }\n\n  private removeItem(key: string) {\n    localStorage.removeItem(key);\n  }\n\n  private getKeys(prefix: string): string[] {\n    const keys: string[] = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key?.startsWith(prefix)) {\n        keys.push(key);\n      }\n    }\n    return keys;\n  }\n\n  private async clearOldMessages(): Promise<void> {\n    const keys = this.getKeys(`${this.keyPrefix}_msg_`);\n    keys.forEach((key) => {\n      const value = localStorage.getItem(key);\n      try {\n        if (value) {\n          const msgObject: ClientMessage = JSON.parse(value);\n          const now = new Date();\n          const dateStr = msgObject?.date;\n          const date = new Date(dateStr);\n          if (!date || now.getTime() - date.getTime() > this.messageExpiredTime) {\n            this.removeItem(key);\n          }\n        } else {\n          this.removeItem(key);\n        }\n      } finally {\n      }\n    });\n    this.lastClearTime = new Date();\n  }\n\n  private runClearOldMessages() {\n    if (this.clearOldMessagesTimeout) {\n      clearTimeout(this.clearOldMessagesTimeout);\n    }\n    const now = new Date();\n    if (now.getTime() - this.lastClearTime.getTime() > this.maxStorageCleanTime) {\n      this.clearOldMessages();\n    } else {\n      this.clearOldMessagesTimeout = setTimeout(() => this.clearOldMessages(), this.messageExpiredTime);\n    }\n  }\n\n  private onStorageChange() {\n    const keys = this.getKeys(`${this.keyPrefix}_msg_`);\n    let maxTime = this.messageTime;\n    keys.forEach((key) => {\n      const value = localStorage.getItem(key);\n      try {\n        if (value) {\n          const msgObject: ClientMessage = JSON.parse(value);\n          const dateStr = msgObject?.date;\n          const date = new Date(dateStr);\n          if (date > this.messageTime) {\n            this.onMessage(msgObject.message);\n            if (date > maxTime) {\n              maxTime = date;\n            }\n          }\n        } else {\n          this.removeItem(key);\n        }\n      } finally {\n      }\n    });\n    this.messageTime = maxTime;\n    this.runClearOldMessages();\n  }\n}\n","import EventEmitter from 'events';\n\nimport {AbstractTransport} from './abstract-transport';\nimport {ConnectionOptions} from './connection-options';\nimport {ConnectionState} from './connection-state';\nimport {EventConnected, EventConnectionError, EventDisconnected, EventMessage} from './const';\nimport {Action1} from './functors';\nimport {TransportType} from './transport-type.enum';\n\nexport class SharedWorkerTransport extends EventEmitter implements AbstractTransport {\n  static isSupported() {\n    return !!window.SharedWorker;\n  }\n\n  private worker: SharedWorker | undefined;\n  private beforeunloadHandler = () => this.disconnect();\n\n  get transportType() {\n    return TransportType.sharedWorker;\n  }\n\n  private onConnected(state: ConnectionState) {\n    this.emit(EventConnected, state);\n  }\n  private onConnectionError(state: ConnectionState) {\n    this.emit(EventConnectionError, state);\n  }\n  private onDisconnected(state: ConnectionState) {\n    this.emit(EventDisconnected, state);\n  }\n  private onMessage(state: any) {\n    this.emit(EventMessage, state);\n  }\n\n  public connected(callback: Action1<ConnectionState>) {\n    this.on(EventConnected, callback);\n  }\n  public connectionError(callback: Action1<ConnectionState>) {\n    this.on(EventConnectionError, callback);\n  }\n  public disconnected(callback: Action1<ConnectionState>) {\n    this.on(EventDisconnected, callback);\n  }\n  public message(callback: Action1<any>) {\n    this.on(EventMessage, callback);\n  }\n\n  private throwIfNotSupported() {\n    if (!SharedWorkerTransport.isSupported()) {\n      throw new Error('SharedWorker is not supported');\n    }\n  }\n\n  public async connect(options?: ConnectionOptions): Promise<ConnectionState> {\n    let state: ConnectionState;\n    try {\n      this.throwIfNotSupported();\n      this.throwIfNotWorkerUri(options);\n      this.worker = await this.createWorker(options!);\n      this.startWorker(this.worker);\n      state = this.getConnectionState();\n      if (state.connected) {\n        addEventListener('beforeunload', this.beforeunloadHandler);\n        this.onConnected(state);\n        return state;\n      }\n    } catch (ex: any) {\n      state = this.getConnectionState();\n      state.error = ex;\n      this.onConnectionError(state);\n    }\n    throw state;\n  }\n\n  throwIfNotWorkerUri(options?: ConnectionOptions) {\n    if (options?.sharedWorkerUri) return;\n    throw new Error('Worker URI is not defined');\n  }\n\n  private getConnectionState(): ConnectionState {\n    return {\n      type: this.transportType,\n      connected: !!this.worker?.port,\n    };\n  }\n\n  private async createWorker(options: ConnectionOptions) {\n    const url = options.sharedWorkerUri!;\n    const isFileExists = await this.isFileExists(url);\n    if (!isFileExists) {\n      throw new Error(`File ${url} does not exist`);\n    }\n    return new SharedWorker(url);\n  }\n\n  private isFileExists(url: string): Promise<boolean> {\n    return new Promise((resolve) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('HEAD', url);\n      xhr.send();\n      xhr.onload = () => {\n        resolve(xhr.status < 400);\n      };\n      xhr.onerror = () => {\n        resolve(false);\n      };\n    });\n  }\n\n  private startWorker(worker: SharedWorker) {\n    worker.port.onmessage = (ev) => {\n      this.onMessage(ev.data.message);\n    };\n    worker.port.start();\n  }\n\n  public async disconnect(): Promise<ConnectionState> {\n    if (this.worker) {\n      try {\n        this.worker.port.postMessage({\n          cmd: 'x',\n        });\n      } finally {\n        this.worker?.port?.close();\n        this.worker = undefined;\n      }\n      removeEventListener('beforeunload', this.beforeunloadHandler);\n    }\n    const state = this.getConnectionState();\n    this.onDisconnected(state);\n    return state;\n  }\n\n  public async postMessage(message: any): Promise<void> {\n    this.worker?.port.postMessage({\n      cmd: 'm',\n      message,\n    });\n  }\n}\n","import {AbstractTransport} from './abstract-transport';\r\nimport {SessionStorageTransport} from './session-storage-transport';\r\nimport {SharedWorkerTransport} from './shared-worker-transport';\r\nimport {TransportType} from './transport-type.enum';\r\n\r\nexport function transportFabric(transportType: TransportType): AbstractTransport {\r\n  switch (transportType) {\r\n    case TransportType.sessionStorage:\r\n      return new SessionStorageTransport();\r\n    case TransportType.sharedWorker:\r\n      return new SharedWorkerTransport();\r\n    default:\r\n      throw new Error(`Unknown transport type: ${transportType}`);\r\n  }\r\n}\r\n","import EventEmitter from 'events';\n\nimport {AbstractTransport} from './abstract-transport';\nimport {ConnectionOptions} from './connection-options';\nimport {ConnectionState} from './connection-state';\nimport {DefaultStorageExpiredTime, DefaultStorageKeyPrefix, EventConnected, EventConnectionError, EventDisconnected, EventMessage} from './const';\nimport {Action1} from './functors';\nimport {transportFabric} from './transport-fabric';\nimport {TransportType} from './transport-type.enum';\n\nexport class BrowserTabIPC extends EventEmitter implements AbstractTransport {\n  public static defaultWorkerUri = '//lopatnov.github.io/browser-tab-ipc/dist/ipc-worker.js';\n  private options: ConnectionOptions = {};\n  private transportTypes!: TransportType[];\n  private transport?: AbstractTransport;\n\n  private onConnected(state: ConnectionState) {\n    this.emit(EventConnected, state);\n  }\n  private onConnectionError(state: ConnectionState) {\n    this.emit(EventConnectionError, state);\n  }\n  private onDisconnected(state: ConnectionState) {\n    this.emit(EventDisconnected, state);\n  }\n  private onMessage(state: any) {\n    this.emit(EventMessage, state);\n  }\n\n  public connected(callback: Action1<ConnectionState>) {\n    return this.on(EventConnected, callback);\n  }\n  public connectionError(callback: Action1<ConnectionState>) {\n    return this.on(EventConnectionError, callback);\n  }\n  public disconnected(callback: Action1<ConnectionState>) {\n    return this.on(EventDisconnected, callback);\n  }\n  public message(callback: Action1<any>) {\n    return this.on(EventMessage, callback);\n  }\n\n  constructor(options?: ConnectionOptions) {\n    super();\n    this.extendOptions(options);\n  }\n\n  get transportType(): TransportType | undefined {\n    return this.transport?.transportType;\n  }\n\n  private extendOptions(options?: ConnectionOptions) {\n    this.options = {...this.options, ...options};\n    this.options.transportTypes = this.initTransportTypes(options);\n    this.options.sharedWorkerUri = this.options.sharedWorkerUri || BrowserTabIPC.defaultWorkerUri;\n    this.options.storageKey = this.options.storageKey || DefaultStorageKeyPrefix;\n    this.options.storageExpiredTime = this.options.storageExpiredTime || DefaultStorageExpiredTime;\n  }\n\n  private initTransportTypes(options?: ConnectionOptions) {\n    if (!options?.transportTypes || (Array.isArray(options?.transportTypes) && !options!.transportTypes.length)) {\n      return [TransportType.sharedWorker, TransportType.sessionStorage];\n    } else if (Array.isArray(options?.transportTypes) && options!.transportTypes.length) {\n      return options.transportTypes;\n    } else {\n      return [options.transportTypes as TransportType];\n    }\n  }\n\n  public connect(options?: ConnectionOptions): Promise<ConnectionState> {\n    this.extendOptions(options);\n    return this.connectTransport(this.options).then((state) => {\n      this.subscribeTransport();\n      return state;\n    });\n  }\n\n  private connectTransport(options: ConnectionOptions, index = 0): Promise<ConnectionState> {\n    if (!Array.isArray(options.transportTypes) || !options.transportTypes.length || index >= options.transportTypes.length || !options.transportTypes[index]) {\n      return this.failConnect();\n    }\n    this.transport = transportFabric(options.transportTypes[index]);\n    return this.transport.connect(options).catch((error) => {\n      ++index;\n      if (Array.isArray(options.transportTypes) && index < options.transportTypes!.length) {\n        return this.connectTransport(options, index);\n      }\n      throw error;\n    });\n  }\n\n  private subscribeTransport() {\n    this.transport!.connected((state) => this.onConnected(state));\n    this.transport!.connectionError((state) => this.onConnectionError(state));\n    this.transport!.disconnected((state) => this.onDisconnected(state));\n    this.transport!.message((content) => this.onMessage(content));\n  }\n\n  private unsubscribeTransport() {\n    this.transport?.removeAllListeners(EventConnected);\n    this.transport?.removeAllListeners(EventConnectionError);\n    this.transport?.removeAllListeners(EventDisconnected);\n    this.transport?.removeAllListeners(EventMessage);\n  }\n\n  private failConnect() {\n    const reason: ConnectionState = {\n      type: null,\n      error: 'Network transport not found',\n      connected: false,\n    };\n\n    this.onConnectionError(reason);\n    return Promise.reject(reason);\n  }\n\n  public disconnect(): Promise<ConnectionState> {\n    try {\n      this.unsubscribeTransport();\n      return this.transport?.disconnect() ?? Promise.reject(new Error('Undefined connection'));\n    } catch (error) {\n      return Promise.reject(error);\n    } finally {\n      this.unsubscribeEvents();\n    }\n  }\n\n  private unsubscribeEvents() {\n    this.removeAllListeners(EventConnected);\n    this.removeAllListeners(EventConnectionError);\n    this.removeAllListeners(EventDisconnected);\n    this.removeAllListeners(EventMessage);\n  }\n\n  public postMessage(message: any): Promise<void> {\n    if (!this.transport) {\n      this.connect();\n    }\n    return this.transport!.postMessage(message);\n  }\n}\n"],"names":["EventConnected","EventConnectionError","EventDisconnected","EventMessage","DefaultStorageKeyPrefix","DefaultStorageExpiredTime","TransportType","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ProcessEmitWarning","warning","console","warn","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","value","EventEmitter","init","this","once","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","create","newListener","emit","unshift","push","length","warned","w","Error","String","name","emitter","count","onceWrapper","fired","removeListener","wrapFn","arguments","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","arr","n","copy","Array","i","spliceOne","list","index","pop","ret","Promise","resolve","reject","errorListener","err","resolver","slice","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","handler","flags","on","addEventListener","wrapListener","arg","removeEventListener","defineProperty","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","position","originalListener","shift","off","removeAllListeners","key","keys","rawListeners","eventNames","_this","Date","disconnect","e","startsWith","keyPrefix","onStorageChange","__extends","SessionStorageTransport","localStorage","sessionStorage","callback","options","throwIfNotSupported","storageKey","messageExpiredTime","storageExpiredTime","maxStorageCleanTime","subscribeStorage","window","beforeunloadHandler","messageTime","isConnected","getConnectionState","onConnected","ex","onConnectionError","isSupported","transportType","connected","storageHandler","clearOldMessages","onDisconnected","date","setMessageItem","runClearOldMessages","_a","getTime","msgObject","JSON","stringify","setItem","removeItem","prefix","getKeys","forEach","getItem","parse","now","dateStr","lastClearTime","clearOldMessagesTimeout","clearTimeout","setTimeout","maxTime","onMessage","SharedWorkerTransport","SharedWorker","sharedWorker","throwIfNotWorkerUri","createWorker","worker","_b","startWorker","ex_1","sharedWorkerUri","port","url","isFileExists","xhr","XMLHttpRequest","open","send","onload","status","onerror","onmessage","ev","data","start","postMessage","cmd","close","transportFabric","_super","extendOptions","BrowserTabIPC","transport","transportTypes","initTransportTypes","defaultWorkerUri","isArray","connectTransport","then","subscribeTransport","failConnect","connect","catch","connectionError","disconnected","content","reason","unsubscribeTransport","unsubscribeEvents"],"mappings":"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"}